openapi: 3.1.0
servers:
  - url: https://localhost

info:
  description: This Application Programming Interface (API) has been developed to promote interoperability of Semantic Artefact Catalogues in the European Open Science Cloud (EOSC) ecosystem and beyond. 
  title: Metadata for Ontology Description and Publication Ontology Application Program Interface
  version: 0.0.1

tags:
  - name: Artefact
    description: Get information about semantic artefact(s) (ontologies, terminologies, taxonomies, thesauri, vocabularies, metadata schemas and semantic standards) or their resources.
  - name: Catalogue
    description: Get information about the semantic artefact catalogue.
  - name: Record
    description: Get semantic artefact catalogue records.
  - name: Search
    description: Search the metadata and catalogue content.
  - name: Documentation
    description: Get documentation about the service.

components:

  parameters:
    format_param:
      description: |
        The response format.
        
        This will override any value of `Accept` in the request headers.
        Possible values are `html`, `jsonld`, `ttl` and `rdfxml`. 

        - `html` a web page that is the most appropriate to answer the call.

        - `jsonld` (default) a JSON-LD representation of the result.

        - `ttl` a ttl representation of the result.

        - `rdfxml` a RDF/XML representation of the result.
      name: format
      in: query
      schema:
        type: string
        enum:
          - html
          - jsonld
          - ttl
          - rdfxml
        default: jsonld

    artefactID:
      description: The ID of the artefact.
      name: artefactID
      in: path
      required: true
      schema:
        type: string

    distributionID:
      description: The ID of the distribution.
      name: distributionID
      in: path
      required: true
      schema:
        type: string

    display:
      description: The parameters to display.
      name: display
      in: query
      schema:
        type: string
        default: all

    query:
      description: The search query.
      name: q
      in: query
      required: true
      schema:
        type: string

    page:
      description: The page number you want to retrieve.
      name: page
      in: query
      schema:
        type: integer
        default: 1

    pagesize:
      description: The size of the page you want to retrieve.
      name: pagesize
      in: query
      schema:
        type: integer
        default: 50

    resourceID:
      description: The ID of the resource.
      name: resourceID
      in: path
      required: true
      schema:
        type: string

  responses:

    notes:
      description: "OK"
      content:
        text/html:
          schema:
            $ref: "#/components/schemas/html"

    artefact:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            title: Semantic Artefact
            properties:
              '@context':
                $ref: "#/components/schemas/Context"
              mod:SemanticArtefact:
                $ref: "#/components/schemas/modSemanticArtefact"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            $ref: "./sa_ttl.yaml"
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              type: string
              example: In progress

    artefacts:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of Semantic Artefact
                items:
                  $ref: "#/components/schemas/modSemanticArtefact"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: array
            items:
              $ref: "./sa_ttl.yaml"
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              type: string
              example: In progress

    catalog:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            title: Semantic Artefact Catalog
            properties:
              '@context':
                $ref: "#/components/schemas/Context"
              mod:SemanticArtefactCatalog:
                $ref: "#/components/schemas/modSemanticArtefactCatalog"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    classes:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of OWL Classes
                items:
                  $ref: "#/components/schemas/owlClass"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    collections:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of Skos Collections
                items:
                  $ref: "#/components/schemas/skosCollection"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    concepts:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of Skos Concepts
                items:
                  $ref: "#/components/schemas/skosConcept"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    distribution:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            title: Semantic Artefact Distribution
            properties:
              '@context':
                $ref: "#/components/schemas/Context"
              mod:SemanticArtefactDistribution:
                $ref: "#/components/schemas/modSemanticArtefactDistribution"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    distributions:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of Semantic Artefact Distributions
                items:
                  $ref: "#/components/schemas/modSemanticArtefactDistribution"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: array
            items:
              type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    individuals:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of OWL Individuals
                items:
                  $ref: "#/components/schemas/owlNamedIndividual"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    properties:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of RDFS Properties
                items:
                  $ref: "#/components/schemas/rdfsProperty"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    record:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            title: Semantic Artefact Catalog Record
            properties:
              '@context':
                $ref: "#/components/schemas/Context"
              mod:SemanticArtefactCatalogRecord:
                $ref: "#/components/schemas/modSemanticArtefactCatalogRecord"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    records:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of Semantic Artefact Catalog Records
                items:
                  $ref: "#/components/schemas/modSemanticArtefactCatalogRecord"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: array
            items:
              type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    resource:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            title: RDFS Resource
            $ref: "#/components/schemas/rdfsResource"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    resources:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of RDFS Resources
                items:
                  $ref: "#/components/schemas/rdfsResource"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    schemes:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                type: array
                title: List of Skos Concept Schemes
                items:
                  $ref: "#/components/schemas/skosScheme"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    searchResult:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                oneOf:
                  - type: array
                    title: List of Semantic Artefacts
                    items:
                      $ref: "#/components/schemas/modSemanticArtefact"
                  - type: array
                    title: List of OWL Classes
                    items:
                      $ref: "#/components/schemas/owlClass"
                  - type: array
                    title: List of Skos Collections
                    items:
                      $ref: "#/components/schemas/skosCollection"
                  - type: array
                    title: List of Skos Concepts
                    items:
                      $ref: "#/components/schemas/skosConcept"
                  - type: array
                    title: List of OWL Individuals
                    items:
                      $ref: "#/components/schemas/owlNamedIndividual"
                  - type: array
                    title: List of RDFS Properties
                    items:
                      $ref: "#/components/schemas/rdfsProperty"
                  - type: array
                    title: List of RDFS Resources
                    items:
                      $ref: "#/components/schemas/rdfsResource"
                  - type: array
                    title: List of Skos Concept Schemes
                    items:
                      $ref: "#/components/schemas/skosScheme"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    searchResultContent:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                oneOf:
                  - type: array
                    title: List of OWL Classes
                    items:
                      $ref: "#/components/schemas/owlClass"
                  - type: array
                    title: List of Skos Collections
                    items:
                      $ref: "#/components/schemas/skosCollection"
                  - type: array
                    title: List of Skos Concepts
                    items:
                      $ref: "#/components/schemas/skosConcept"
                  - type: array
                    title: List of OWL Individuals
                    items:
                      $ref: "#/components/schemas/owlNamedIndividual"
                  - type: array
                    title: List of RDFS Properties
                    items:
                      $ref: "#/components/schemas/rdfsProperty"
                  - type: array
                    title: List of RDFS Resources
                    items:
                      $ref: "#/components/schemas/rdfsResource"
                  - type: array
                    title: List of Skos Concept Schemes
                    items:
                      $ref: "#/components/schemas/skosScheme"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    searchResultMetadata:
      description: "OK"
      content:
        application/ld+json:
          schema:
            type: object
            properties:
              '@context':
                $ref: "#/components/schemas/CollectionContext"
              '@id':
                example: https://example.org/collection/collectionID
              '@type':
                example: hydra:Collection
              totalItems:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              itemsPerPage:
                $ref: "#/components/schemas/xsdNonNegativeInteger"
              member:
                  type: array
                  title: List of Semantic Artefacts
                  items:
                    $ref: "#/components/schemas/modSemanticArtefact"
              view:
                $ref: "#/components/schemas/view"
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: array
            xml:
              name: rdf
              wrapped: true
            items:
              example: In progress

    error_message:
      description: The provided parameters are incorrect.
      content:
        text/html:
          schema:
            $ref: "#/components/schemas/error_message"

  schemas:
    error_message:
      title: error message
      description: A text message describing an error.
      type: string
      maxLength: 256

    html:
      description: A html page.
      type: string

    Context:
      type: object
      properties:
        adms:
          title: adms
          example: http://www.w3.org/ns/adms#
        cc:
          title: cc
          example: http://creativecommons.org/ns#
        dc:
          title: dc
          example: http://purl.org/dc/elements/1.1/
        dcat:
          title: dcat
          example: http://www.w3.org/ns/dcat#
        dcterms:
          title: dcterms
          example: http://purl.org/dc/terms/
        doap:
          title: doap
          example: http://usefulinc.com/ns/doap#
        foaf:
          title: foaf
          example: http://xmlns.com/foaf/0.1/
        ical:
          title: ical
          example: http://www.w3.org/2002/12/cal/ical#
        mod:
          title: mod
          example: https://w3id.org/mod#
        odrl:
          title: odrl
          example: http://www.w3.org/ns/odrl/2/
        owl:
          title: owl
          example: http://www.w3.org/2002/07/owl#
        pav:
          title: pav
          example: http://purl.org/pav/
        prov:
          title: prov
          example: http://www.w3.org/ns/prov#
        rdf:
          title: rdf
          example: http://www.w3.org/1999/02/22-rdf-syntax-ns#
        rdfs:
          title: rdfs
          example: http://www.w3.org/2000/01/rdf-schema#
        schema:
          title: schema
          example: https://schema.org/
        sd:
          title: sd
          example: http://www.w3.org/ns/sparql-service-description#
        skos:
          title: skos
          example: http://www.w3.org/2004/02/skos/core#
        vann:
          title: vann
          example: https://vocab.org/vann/
        vcard:
          title: vcard
          example: http://www.w3.org/2006/vcard/ns#
        void:
          title: void
          example: http://rdfs.org/ns/void#
        xsd:
          title: xsd
          example: http://www.w3.org/2001/XMLSchema#

    CollectionContext:
      allOf:
        - $ref: '#/components/schemas/Context'
        - type: object
          properties:
            hydra:
              title: hydra
              example: http://www.w3.org/ns/hydra/core#
            Collection: 
              example: "hydra:Collection"
            member:
              example: "hydra:member"
            totalItems:
              example: "hydra:totalItems"
            itemsPerPage:
              example: "hydra:itemsPerPage"
            view:
              example: "hydra:view"
            firstPage:
              example: "hydra:first"
            lastPage:
              example: "hydra:last"
            previousPage:
              example: "hydra:previous"
            nextPage:
              example: "hydra:next"

    view:
      type: object
      properties:
        '@id':
          example: https://example.org/items?page=3
        '@type':
         example: hydra:PartialCollectionView
        firstPage:
         example: https://example.org/items?page=1
        previousPage:
         example: https://example.org/items?page=2
        nextPage:
         example: https://example.org/items?page=4
        lastPage:
         example: https://example.org/items?page=42

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Catalog
    dcatCatalog:
      title: Catalog
      description: A curated collection of metadata about resources (e.g., datasets and data services in the context of a data catalog)
      allOf:
        - $ref: '#/components/schemas/dcatDataset'
        - type: object
          properties:
            dcat:catalog:
              title: catalog
              description: A catalog whose contents are of interest in the context of this catalog.
              $ref: "#/components/schemas/dcatCatalog"
            dcat:dataset:
              title: dataset
              description: A collection of data that is listed in the catalog.
              $ref: "#/components/schemas/dcatDataset"
            dcterms:hasPart:
              title: has part
              description: An item that is listed in the catalog.
              $ref: "#/components/schemas/dcatResource"
            foaf:homepage:
              title: homepage
              description: A homepage of the catalog (a public Web document usually available in HTML).
              type: object
              properties:
                '@id':
                  example: https://example.org/Document/DocumentID
                '@type':
                  example: foaf:Document
            dcat:record:
              title: catalog record
              description: A record describing the registration of a single dataset or data service that is part of the catalog.
              type: array
              items:
                $ref: "#/components/schemas/dcatCatalogRecord"
            dcat:resource:
              title: resource
              description: A resource that is listed in the catalog.
              $ref: "#/components/schemas/dcatResource"
            dcat:service:
              title: service
              description: A site or end-point that is listed in the catalog.
              $ref: "#/components/schemas/dcatDataService"
            dcat:themeTaxonomy:
              title: themes
              description: A knowledge organization system (KOS) used to classify catalog's datasets and services.
              $ref: "#/components/schemas/rdfsResource"

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Catalog_Record
    dcatCatalogRecord:
      title: Catalog Record
      description: A record in a data catalog, describing the registration of a single dataset or data service.
      allOf:
        - type: object
          properties:
            dcterms:conformsTo:
              title: conforms to
              description: An established standard to which the described resource conforms.
            dcterms:description:
              title: Description
              description: A free-text account of the record.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:issued:
              title: listing date
              description: The date of listing (i.e. formal recording) of the corresponding dataset or service in the catalog.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:modified:
              title: update/modification date
              description: Most recent date on which the catalog entry was changed, updated or modified.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:title:
              title: Title
              description: A name given to the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            foaf:primaryTopic:
              title: primary topic
              description: The Resource (dataset or service) described in the record.
              $ref: "#/components/schemas/dcatResource"

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Data_Service
    dcatDataService:
      title: Data service
      description: A collection of operations that provides access to one or more datasets or data processing functions.
      allOf:
        - $ref: '#/components/schemas/dcatResource'
        - type: object
          properties:
            dcat:endpointDescription:
              title: endpoint description
              description: A description of the services available via the end-points, including their operations, parameters etc.
            dcat:endpointURL:
              title: endpoint URL
              description: The root location or primary endpoint of the service (a web-resolvable IRI).
            dcat:servesDataset:
              tile: serves dataset
              description: A collection of data that this data service can distribute.
              $ref: "#/components/schemas/dcatDataset"

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Dataset
    dcatDataset:
      title: Dataset
      description: A collection of data, published or curated by a single agent, and available for access or download in one or more representations.
      allOf:
        - $ref: '#/components/schemas/dcatResource'
        - type: object
          properties:
            dcterms:accrualPeriodicity:
              title: frequency
              description: The frequency at which dataset is published.
            dcat:distribution:
              title: dataset distribution
              description: An available distribution of the dataset.
              $ref: "#/components/schemas/dcatDistribution"
            dcterms:spatial:
              title: spatial/geographical coverage
              description: The geographical area covered by the dataset.
            dcat:spatialResolutionInMeters:
              title: spatial resolution
              description: Minimum spatial separation resolvable in a dataset, measured in meters.
            dcterms:temporal:
              title: temporal coverage
              description: The temporal period that the dataset covers.
            dcat:temporalResolution:
              title: temporal resolution
              description: Minimum time period resolvable in the dataset.
            prov:wasGeneratedBy:
              title: was generated by
              description: An activity that generated, or provides the business context for, the creation of the dataset.
              type: object
              properties:
                '@id':
                  example: https://example.org/Activity/ActivityID
                '@type':
                  example: prov:Activity

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Distribution
    dcatDistribution:
      title: Distribution
      description: A specific representation of a dataset. A dataset might be available in multiple serializations that may differ in various ways, including natural language, media-type or format, schematic organization, temporal and spatial resolution, level of detail or profiles (which might specify any or all of the above).
      type: object
      properties:
        dcat:accessService:
          title: access service
          description: A data service that gives access to the distribution of the dataset
          $ref: "#/components/schemas/dcatDataService"
        dcterms:accessRights:
          title: access rights
          description: A rights statement that concerns how the distribution is accessed.
        dcat:accessURL:
          title: access URL
          description: A URL of the resource that gives access to a distribution of the dataset. E.g. landing page, feed, SPARQL endpoint.
          $ref: "#/components/schemas/rdfsResource"
        dcat:byteSize:
          title: byte size
          description: The size of a distribution in bytes.
        dcat:compressFormat:
          title: compression format
          description: The compression format of the distribution in which the data is contained in a compressed form, e.g. to reduce the size of the downloadable file.
        dcterms:conformsTo:
          title: conforms to
          description: An established standard to which the distribution conforms.
        dcterms:description:
          title: description
          description: A free-text account of the distribution.
          $ref: "#/components/schemas/rdfsLiteral"
        dcat:downloadURL:
          title: download URL
          description: The URL of the downloadable file in a given format. E.g. CSV file or RDF file. The format is indicated by the distribution's dcterms:format and/or dcat:mediaType
          $ref: "#/components/schemas/rdfsResource"
        dcterms:format:
          title: format
          description: The file format of the distribution.
        odrl:hasPolicy:
          title: has policy
          description: An ODRL conformant policy expressing the rights associated with the distribution.
          type: object
          properties:
            '@id':
              example: https://example.org/Policy/PolicyID
            '@type':
              example: odrl:Policy
        dcterms:issued:
          title: release date
          description: Date of formal issuance (e.g., publication) of the distribution.
          $ref: "#/components/schemas/rdfsLiteral"
        dcterms:license:
          title: license
          description: A legal document under which the distribution is made available.
        dcat:mediaType:
          title: media type
          description: The media type of the distribution as defined by IANA.
        dcterms:modified:
          title: update/modification date
          description: Most recent date on which the distribution was changed, updated or modified.
          $ref: "#/components/schemas/rdfsLiteral"
        dcat:packageFormat:
          title: packaging format
          description: The package format of the distribution in which one or more data files are grouped together, e.g. to enable a set of related files to be downloaded together.
        dcterms:rights:
          title: rights
          description: Information about rights held in and over the distribution.
        dcat:spatialResolutionInMeters:
          title: spatial resolution
          description: The minimum spatial separation resolvable in a dataset distribution, measured in meters.
        dcat:temporalResolution:
          title: temporal resolution
          description: Minimum time period resolvable in the dataset distribution.
        dcterms:title:
          title: title
          description: A name given to the distribution.
          $ref: "#/components/schemas/rdfsLiteral"

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Resource
    dcatResource:
      title: Catalogued resource
      description: Resource published or curated by a single agent.
      type: object
      properties:
        dcterms:accessRights:
          title: access rights
          description: Information about who can access the resource or an indication of its security status.
        dcterms:conformsTo:
          title: conforms to
          description: An established standard to which the described resource conforms.
        dcat:contactPoint:
          title: contact point
          description: Relevant contact information for the cataloged resource. Use of vCard is recommended [VCARD-RDF].
          type: object
          properties:
            '@id':
              example: https://example.org/vcardKind/vcardKindID 
            '@type':
              example: vcard:Kind
            vcard:fn:
              example: Corky Crystal
            vcard:nickname:
              example: Corks
        dcterms:creator:
          title: resource creator
          description: The entity responsible for producing the resource.
        dcterms:description:
          title: description
          description: A free-text account of the item.
          $ref: "#/components/schemas/rdfsLiteral"
        odrl:hasPolicy:
          title: has policy
          description: An ODRL conformant policy expressing the rights associated with the resource.
          type: object
          properties:
            '@id':
              example: https://example.org/Policy/PolicyID
            '@type':
              example: odrl:Policy
        dcterms:identifier:
          title: identifier
          description: A unique identifier of the item.
          $ref: "#/components/schemas/rdfsLiteral"
        dcterms:isReferencedBy:
          title: is referenced by
          description: A related resource, such as a publication, that references, cites, or otherwise points to the cataloged resource.
        dcterms:issued:
          title: release date
          description: Date of formal issuance (e.g., publication) of the item.
        dcat:keyword:
          title:  keyword/tag
          description: A keyword or tag describing the resource.
        dcat:landingPage:
          title: landing page
          description: A Web page that can be navigated to in a Web browser to gain access to the catalog, a dataset, its distributions and/or additional information.
          type: object
          properties:
            '@id':
              example: https://example.org/Document/DocumentID
            '@type':
              example: foaf:Document
        dcterms:language:
          title: language
          description: A language of the item. This refers to the natural language used for textual metadata (i.e. titles, descriptions, etc) of a cataloged resource (i.e. dataset or service) or the textual values of a dataset distribution
        dcterms:license:
          title: license
          description: A legal document under which the resource is made available.
        dcterms:modified:
          title: update/modification date
          description: Most recent date on which the item was changed, updated or modified.
          $ref: "#/components/schemas/rdfsLiteral"
        dcterms:publisher:
          title: publisher
          description: The entity responsible for making the item available.
        prov:qualifiedAttribution:
          title: qualified attribution
          description: Link to an Agent having some form of responsibility for the resource
          type: object
          properties:
            '@id':
              example: https://example.org/Attribution/AttributionID
            '@type':
              example: prov:Attribution
        dcat:qualifiedRelation:
          title: qualified relation
          description: Link to a description of a relationship with another resource.
          $ref: "#/components/schemas/dcatResource"
        dcterms:relation:
          title: resource relation
          description: A resource with an unspecified relationship to the cataloged item.
        dcterms:rights:
          title: rights
          description: A statement that concerns all rights not addressed with dcterms:license or dcterms:accessRights, such as copyright statements.
        dcterms:subject:
          title: theme/category
          description: A main category of the resource. A resource can have multiple themes.
        dcterms:title:
          title: title
          description: A name given to the item.
          $ref: "#/components/schemas/rdfsLiteral"
        dcterms:type:
          title: type/genre
          description: The nature or genre of the resource.

    modSemanticArtefact:
      title: Semantic Artefact
      description: Semantic Artefact is defined here as a machine-actionable and -readable formalisation of a conceptualisation enabling sharing and reuse by humans and machines. These artefacts may have a broad range of formalisation, from loose set of terms, taxonomies, thesauri to higher-order logics, and include the concepts/terms/classes constituting these. Moreover, semantic artefacts are serialised using a variety of digital representation formats, e.g., RDF Turtle, OWL-RDF, XML, JSON-LD.
      allOf:
        - type: object
          properties:
            '@id':
              example: https://example.org/SemanticArtefact/SemanticArtefactID
            '@type':
              example: mod:SemanticArtefact
        -  $ref: '#/components/schemas/dcatResource'
        - type: object
          properties:
            cc:useGuidelines:
              title: use guidelines
              description: A related resource which defines non-binding use guidelines for the work.
              $ref: "#/components/schemas/rdfsResource"
            cc:morePermissions:
              title: more permissions
              description: A related resource which describes additional permissions or alternative licenses for a Work which may be available.
              $ref: "#/components/schemas/rdfsResource"
            foaf:primaryTopic:
              title: key classes
              type: object
              properties:
                '@id':
                  example: https://example.org/Thing/ThingID
                '@type':
                  example: owl:Thing
            dcterms:abstract:
              title: abstract
              description: A summary of the resource.
            dcterms:accrualMethod:
              title: accrual method
              description: The method by which items are added to a collection. Recommended practice is to use a value from the Collection Description Accrual Method Vocabulary.
            dcterms:accrualPeriodicity:
              title: accrual periodicity
              description: The frequency with which items are added to a collection. Recommended practice is to use a value from the Collection Description Frequency Vocabulary.
            dcterms:accrualPolicy:
              title: accrual policy
              description: The policy governing the addition of items to a collection. Recommended practice is to use a value from the Collection Description Accrual Policy Vocabulary.
            dcterms:alternative:
              title: alternative name
              description: An alternative name for the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:audience:
              title: target audience
              description: A class of agents for whom the resource is intended or useful.
            dcterms:bibliographicCitation:
              title: bibliographic reference
              description: A bibliographic reference for the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:contributor:
              title: contributor
              description: An entity responsible for making contributions to the resource.
            dcterms:coverage:
              title: coverage
              description: The spatial or temporal topic of the resource, the spatial applicability of the resource, or the jurisdiction under which the resource is relevant. Spatial topic and spatial applicability may be a named place or a location specified by its geographic coordinates. Temporal topic may be a named period, date, or date range. A jurisdiction may be a named administrative entity or a geographic place to which the resource applies. Recommended practice is to use a controlled vocabulary such as the Getty Thesaurus of Geographic Names [[TGN](https://www.getty.edu/research/tools/vocabulary/tgn/index.html)]. Where appropriate, named places or time periods may be used in preference to numeric identifiers such as sets of coordinates or date ranges.  Because coverage is so broadly defined, it is preferable to use the more specific subproperties Temporal Coverage and Spatial Coverage.
            dcterms:hasFormat:
              title: has format
              description: A related resource that is substantially the same as the pre-existing described resource, but in another format.
            dcterms:hasPart:
              title: has part (has view)
              description: A related resource that is included either physically or logically in the described resource.
            dcterms:hasVersion:
              title: has version
              description: A related ontology that is a version, edition, or adtapation of the described ontology.
            dcterms:isFormatOf:
              title: is format of
              description: A related resource that is substantially the same as the described resource, but in another format.
            dcterms:isPartOf:
              title: is part of (view of)
              description: Shall be used to identify a subset or a view of an ontology.
            dcterms:rightsHolder:
              title: rights holder
              description: The person who can be contacted to enquire about an ontology.
            dcterms:source:
              title: source
              description: SThe ontology(ies) referred to while creating the present ontology.
            doap:bug-database:
              title: bug database
              description: Bug tracker for a project.
            doap:mailing-list:
              title: 
              description: 
            doap:repository:
              title: repository
              description: Source code repository.
              type: object
              properties:
                '@id':
                  example: https://example.org/repository/repositoryID
                '@type':
                  example: doap:repository
            foaf:depiction:
              title: depiction
              description: A depiction of some thing.
              type: object
              properties:
                '@id':
                  example: https://example.org/Image/ImageID
                '@type':
                  example: foaf:Image
            foaf:fundedBy:
              title: funded or sponsored by
              description: An ontology that is sponsored by and developed under a project.
              type: object
              properties:
                '@id':
                  example: https://example.org/Thing/ThingID
                '@type':
                  example: owl:Thing
            foaf:homepage:
              title: homepage
              description: An unambiguous reference to the resource within a given context.
              type: object
              properties:
                '@id':
                  example: https://example.org/Document/DocumentID
                '@type':
                  title: Document
                  description: A document.
                  example: foaf:Document
            foaf:logo:
              title: logo
              description: A logo representing some thing.
              type: object
              properties:
                '@id':
                  example: https://example.org/Thing/ThingID
                '@type':
                  example: owl:Thing
            mod:acronym:
              title: acronym
              description: Short acronym label, often used as an identifier within some ontology platforms such as BioPortal or OBO Foundry.
              $ref: "#/components/schemas/xsdString"
            mod:analytics:
              title: analytics
              description: This property shall be used to store any analytics for an ontology. E.g., number of visits an ontology received in a portal, number of downloads, etc.
              type: object
              properties:
                '@id':
                  example: https://example.org/Analytics/AnalyticsID
                '@type':
                  example: mod:Analytics
            mod:comesFromTheSameDomain:
              title: comes from the same domain
              description: If the two ontologies come from the same domain (without any other details).
            mod:competencyQuestion:
              title: competency question
              description: A set of questions made to build an ontology at the design time.
              $ref: "#/components/schemas/xsdString"
            mod:designedForTask:
              title: designed for task
              description: The purpose for which the ontology was originally designed.
              type: object
              properties:
                '@id':
                  example: https://example.org/SemanticArtefactTask/SemanticArtefactTaskID
                '@type':
                  example: mod:SemanticArtefactTask
            mod:endorsedBy:
              title: endorsed by
              description: An ontology endorsed by an agent.
            mod:generalizes:
              title: generalizes
              description: Indicates that the subject vocabulary generalizes by some superclasses or superproperties the object vocabulary.
            mod:group:
              title: group
              description: A group of ontologies that the ontology is usually considered into.
              type: object
              properties:
                '@id':
                  example: https://example.org/Group/GroupID
                '@type':
                  example: mod:Group
            mod:hasDisjunctionsWith:
              title: has disjunctions with
              description: Indicates that the subject vocabulary declares some disjunct classes with the object vocabulary.
            mod:hasDisparateModelling:
              title: disparate modelling with
              description: Disagreements related  to  the  conceptualization  of  the  ontologies. Two ontologies are considered to have disparate modeling if they represent corresponding entities in different ways, e.g.  as an instance in one case and a class in the other.
            mod:hasEquivalencesWith:
              title: has equivalences with
              description: Indicates that the subject vocabulary declares some equivalent classes or properties with the object vocabulary.
            mod:hasEvaluation:
              title: evaluation
              description: This property makes a relationship between an ontology and its evaluation result.
              type: object
              properties:
                '@id':
                  example: https://example.org/Evaluation/EvaluationID
                '@type':
                  example: mod:Evaluation
            mod:knownUsage:
              title: known usage
              description: The applications where the ontology is being used.
              $ref: "#/components/schemas/xsdString"
            mod:metrics:
              title: metrics
              description: A generic property to store any metrics (number) related to the ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfAgents:
              title: number of agents
              description: Total number of agents in a semantic artefact catalogue or number of agents related a given semantic artefact.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfEndorsements:
              title: number of endorsmements
              description: Number of endorsing organizations (maybe represented with mod:endorsedBy).
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfEvaluations:
              title: number of evaluations
              description: Number of evaluations (maybe represented with mod:hasEvaluation).
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfNotes:
              title: number of notes or comments
              description: Number of notes or comments (maybe represented with schema:comment) related to the ontologies.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfUsers:
              title: number of users
              description: Total number of users in a semantic artefact catalogue or number of users watching/following/using a given semantic artefact.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfUsingProjects:
              title: number of using projects
              description: Number of projects (maybe represented with mod:usedInProject) using an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:reliesOn:
              title: relies on or reuses
              description: A general property for different kind of case when a semantic resource relies or reuses another one.
            mod:semanticArtefactRelation:
              title: generally related to
              description: A general property for semantic artefact relations.
              $ref: "#/components/schemas/modSemanticArtefact"
            mod:similar:
              title: similar
              description: Used to assert that two vocabularies are similar in scope and objectives, independently of the fact that they otherwise refer to each other.
            mod:specializes:
              title: specializes
              description: Indicates that the subject vocabulary defines some subclasses or subproperties of the object vocabulary, or local restrictions on those.
            mod:status:
              title: status
              $ref: "#/components/schemas/xsdString"
            mod:toDoList:
              title: to-do list
              description: Describes future tasks planned by a resource curator. This property is primarily intended to be used for vocabularies or datasets, but the domain is left open, it can be used for any resource. Use iCalendar Vtodo class and its properties to further describe the task calendar, priorities etc.
              type: object
              properties:
                '@id':
                  example: https://example.org/Vtodo/VtodoID
                '@type':
                  example: ical:Vtodo
            mod:URI:
              title: URI
              description: The URI of the ontology which is described by this metadata.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:usedBy:
              title: used by
              description: Indicates that the subject vocabulary is used by the object vocabulary.
            mod:usedInProject:
              title: used in project
              description: An ontology that is used in a project.      
              type: object
              properties:
                '@id':
                  example: https://example.org/Project/ProjectID
                '@type':
                  example: foaf:Project
            owl:backwardCompatibleWith:
              title: backward compatible
              description: This identifies the specified ontology as a prior version of the containing ontology, and further indicates that it is backward compatible with it.
              type: object
              properties:
                '@id':
                  example: https://example.org/Ontology/OntologyID
                '@type':
                  example: owl:Ontology
            owl:deprecated:
              title: deprecated
              description: The annotation property that indicates that a given entity has been deprecated.   
              $ref: "#/components/schemas/rdfsResource"
            owl:incompatibleWith:
              title: incompatible
              description: This indicates that the containing ontology is a later version of the referenced ontology, but is not backward compatible with it.
              type: object
              properties:
                '@id':
                  example: https://example.org/Ontology/OntologyID
                '@type':
                  example: owl:Ontology
            owl:priorVersion:
              title: prior version
              description: This identifies the specified ontology as a prior version of the containing ontology.
              type: object
              properties:
                '@id':
                  example: https://example.org/Ontology/OntologyID
                '@type':
                  example: owl:Ontology
            owl:versionInfo:
              title: version information
              description: The version of the released ontology.
              $ref: "#/components/schemas/xsdString"
            owl:versionIRI:
              title: version IRI
              description: The property that identifies the version IRI of an ontology.      
              type: object
              properties:
                '@id':
                  example: https://example.org/Ontology/OntologyID
                '@type':
                  example: owl:Ontology
            pav:curatedBy:
              title: curator
              description: A curator who restructure the previously authored content and shape it to be appropriate for the intended representation (e.g. by normalizing the fields for being represented in a spreadsheet).
            pav:createdWith:
              title: created with
              description: The tool used for the creation of an ontology.
            prov:wasGeneratedBy:
              title: was generated by
              description: Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.
              type: object
              properties:
                '@id':
                  example: https://example.org/Activity/ActivityID
                '@type':
                  example: prov:Activity
            prov:wasInvalidatedBy:
              title: was invalidated by
              description: Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation."@en ;
              type: object
              properties:
                '@id':
                  example: https://example.org/Activity/ActivityID
                '@type':
                  example: prov:Activity
            rdfs:comment:
              title: notes or comments
              description: A description of the subject resource.      
              $ref: "#/components/schemas/rdfsLiteral"
            schema:associatedMedia:
              title:
              description: A media object that encodes this CreativeWork. This property is a synonym for encoding.      
            schema:award:
              title: award
              description: An award won by or for this item.
            schema:comment:
              title: user notes or reviews
              description: Comments, typically from users.
            schema:funding:
              title: funding
              description: A Grant that directly or indirectly provide funding or sponsorship for this item.
            schema:includedInDataCatalog:
              title: indexed or included in catalog or repository
              description: A data catalog which contains this dataset.
            schema:translationOfWork:
              title: translation of
              description: The work that this work has been translated from.
            schema:translator:
              title: translator
              description: Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
            schema:workTranslation:
              title: work translation
              description: A pointer to the translated ontology(ies) for an existing ontology.
            skos:hiddenLabel:
              title: hidden label
              description: Hidden or past name.   
              $ref: "#/components/schemas/rdfsLiteral"
            vann:changes:
              title: Changes
              description: A reference to a resource that describes changes between this version of a vocabulary and the previous.
            vann:example:
              title: example
              description: A reference to a resource that provides an example of how this resource can be used.
            vann:preferredNamespacePrefix:
              title: Preferred Namespace Prefix
              description: The preferred namespace prefix to use when using terms from this vocabulary in an XML document
            vann:preferredNamespaceUri:
              title: Preferred Namespace Uri
              description: The preferred namespace URI to use when using terms from this vocabulary in an XML document
            void:openSearchDescription:
              title: free-text search endpoint
              description: An OpenSearch description document for a free-text search service over a void:Dataset.
              type: object
              properties:
                '@id':
                  example: https://example.org/Document/DocumentID
                '@type':
                  example: foaf:Document
            void:classPartition:
              title: class partition
              description: A subset of a void:Dataset that contains only the entities of a certain rdfs:Class.
              type: object
              properties:
                '@id':
                  example: https://example.org/voidDataset/voidDatasetID
                '@type':
                  example: void:dataset
            void:exampleResource:
              title: example resource
              description: Example resource of dataset.
              $ref: "#/components/schemas/rdfsResource"
            void:rootResource:
              title: root resource
              description: This property is to provide the root class(es) of an ontology. This is automatically populated by taking the direct subclasses of owl:Thing. If the ontology is also defined as a unique skos:ConceptScheme, then this property should become equivalent of skos:hasTopConcept.
              $ref: "#/components/schemas/rdfsResource"
            void:propertyPartition:
              title: property partition
              description: A subset of a void:Dataset that contains only the triples of a certain rdf:Property.
              type: object
              properties:
                '@id':
                  example: https://example.org/voidDataset/voidDatasetID
                '@type':
                  example: void:dataset
            void:uriLookupEndpoint:
              title: URI lookup endpoint
              description: A protocol endpoint for simple URI lookups for a void:Dataset.
              $ref: "#/components/schemas/xsdAnyURI"
            void:uriRegexPattern:
              title: identifier pattern
              description: A regular expression that matches the URIs of a void:Dataset's entities.

    modSemanticArtefactCatalog:
      title: Semantic Artfeact Catalog
      description: A dedicated web-based system that fosters the availability, discoverability and long-term preservation and maintenance of semantic artefacts.
      allOf:
        - type: object
          properties:
            '@id':
              example: https://example.org/SemanticArtefactCatalog/SemanticArtefactCatalogID
            '@type':
              type: array
              items:
                example: mod:SemanticArtefactCatalog
        - $ref: '#/components/schemas/dcatCatalog'
        - type: object
          properties:
            adms:supportedSchema:
              title: supported schema/format
              description: A schema according to which the Asset Repository can provide data about its content.
              type: object
              properties:
                '@id':
                  example: https://example.org/asset/assetId
                '@type':
                  example: adms:Asset
            cc:useGuidelines:
              title: use guidelines
              description: A related resource which defines non-binding use guidelines for the work.
              $ref: "#/components/schemas/rdfsResource"
            cc:morePermissions:
              title: more permissions
              description: A related resource which describes additional permissions or alternative licenses for a Work which may be available.
              $ref: "#/components/schemas/rdfsResource"
            dcat:accessURL:
              title: access URL
              description: A URL of the resource that gives access to a distribution of the dataset. E.g. landing page, feed, SPARQL endpoint.
              $ref: "#/components/schemas/rdfsResource"
            dcterms:abstract:
              title: abstract
              description: A summary of the resource.
            dcterms:accrualMethod:
              title: accrual method
              description: The method by which items are added to a collection. Recommended practice is to use a value from the Collection Description Accrual Method Vocabulary.
            dcterms:accrualPeriodicity:
              title: accrual periodicity
              description: The frequency with which items are added to a collection. Recommended practice is to use a value from the Collection Description Frequency Vocabulary.
            dcterms:accrualPolicy:
              title: accrual policy
              description: The policy governing the addition of items to a collection. Recommended practice is to use a value from the Collection Description Accrual Policy Vocabulary.
            dcterms:alternative:
              title: alternative title
              description: An alternative name for the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:audience:
              title: target audience
              description: A class of agents for whom the resource is intended or useful.
            dcterms:bibliographicCitation:
              title: bibliographic reference
              description: A bibliographic reference for the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:created:
              title: creation date
              description: Date of creation of the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:contributor:
              title: contributor
              description: An entity responsible for making contributions to the resource.
            dcterms:coverage:
              title: coverage
              description: The spatial or temporal topic of the resource, the spatial applicability of the resource, or the jurisdiction under which the resource is relevant. Spatial topic and spatial applicability may be a named place or a location specified by its geographic coordinates. Temporal topic may be a named period, date, or date range. A jurisdiction may be a named administrative entity or a geographic place to which the resource applies. Recommended practice is to use a controlled vocabulary such as the Getty Thesaurus of Geographic Names [[TGN](https://www.getty.edu/research/tools/vocabulary/tgn/index.html)]. Where appropriate, named places or time periods may be used in preference to numeric identifiers such as sets of coordinates or date ranges.  Because coverage is so broadly defined, it is preferable to use the more specific subproperties Temporal Coverage and Spatial Coverage.
            dcterms:isPartOf:
              title: is part of (view of)
              description: Shall be used to identify a subset or a view of an ontology
            dcterms:modified:
              title: modification date
              description: Date on which the resource was changed.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:rightsHolder:
              title: rights holder
              description: The person who can be contacted to enquire about an ontology.
            dcterms:source:
              title: source
              description: The ontology(ies) referred to while creating the present ontology.
            doap:bug-database:
              title: bug database
              description: Bug tracker for a project.
            doap:mailing-list:
              title: 
              description: 
            doap:repository:
              title: repository
              description: Source code repository.
              type: object
              properties:
                '@id':
                  example: https://example.org/repository/repositoryID
                '@type':
                  example: doap:repository
            foaf:depiction:
              title: depiction
              description: A depiction of some thing.
              type: object
              properties:
                '@id':
                  example: https://example.org/Image/ImageID
                '@type':
                  example: foaf:Image
            foaf:fundedBy:
              title: funded or sponsored by
              description: An ontology that is sponsored by and developed under a project.
              type: object
              properties:
                '@id':
                  example: https://example.org/Thing/ThingID
                '@type':
                  example: owl:Thing
            foaf:logo:
              title: logo
              description: A logo representing some thing.
              type: object
              properties:
                '@id':
                  example: https://example.org/Thing/ThingID
                '@type':
                  example: owl:Thing
            mod:analytics:
              title: analytics
              description: This property shall be used to store any analytics for an ontology. E.g., number of visits an ontology received in a portal, number of downloads, etc.
              type: object
              properties:
                '@id':
                  example: https://example.org/Analytics/AnalyticsID
                '@type':
                  example: mod:Analytics
            mod:endorsedBy:
              title: endorsed by
              description: An ontology endorsed by an agent.
            mod:fairScore:
              title: FAIR assessment
              description: A FAIRness assessment result produced by a known or identified FAIRness assessment method or tool. It can be either a simple number or a structured result document explaining the assessment.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:group:
              title: group
              description: A group of ontologies that the ontology is usually considered into.
              type: object
              properties:
                '@id':
                  example: https://example.org/Group/GroupID
                '@type':
                  example: mod:Group
            mod:knownUsage:
              title: known usage
              description: The applications where the ontology is being used.
              $ref: "#/components/schemas/xsdString"
            mod:metadataVoc:
              title: metadata vocabulary used
              $ref: "#/components/schemas/xsdAnyURI"
            mod:metrics:
              title: metrics
              description: A generic property to store any metrics (number) related to the ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfAgents:
              title: number of agents
              description: Total number of agents in a semantic artefact catalogue or number of agents related a given semantic artefact.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfArtefacts:
              title: number of semantic artefacts
              description: Total number of semantic artefacts within a catalog.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfAxioms:
              title: number of axioms or triples
              description: The total number of axioms in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfClasses:
              title: number of classes
              description: The total number of classes in an ontology.
              type: integer
            mod:numberOfDataProperties:
              title: number of data properties
              description: The total number of data properties in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfDeprecated:
              title: number of deprecated objects
              description: The total number of  in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfEndorsements:
              title: number of endorsmements
              description: Number of endorsing organizations (maybe represented with mod:endorsedBy).
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfIndividuals:
              title: number of individuals
              description: The total number of individuals in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfLabels:
              title: number of labels
              description: Number of defined labels for any resources in an ontology (classes, properties, etc).
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfMappings:
              title: number of mappings
              description: Number of mappings within a given semantic artefact or semantic artefact catalogue.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfObjectProperties:
              title: number of object properties
              description: The total number of object properties in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfProperties:
              title: number of properties
              description: The total number of properties in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfUsers:
              title: number of users
              description: Total number of users in a semantic artefact catalogue or number of users watching/following/using a given semantic artefact.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfUsingProjects:
              title: number of using projects
              description: Number of projects (maybe represented with mod:usedInProject) using an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:toDoList:
              title: to-do list
              description: Describes future tasks planned by a resource curator. This property is primarily intended to be used for vocabularies or datasets, but the domain is left open, it can be used for any resource. Use iCalendar Vtodo class and its properties to further describe the task calendar, priorities etc.
              type: object
              properties:
                '@id':
                  example: https://example.org/Vtodo/VtodoID
                '@type':
                  example: ical:Vtodo
            mod:status:
              title: status
              $ref: "#/components/schemas/xsdString"
            mod:usedInProject:
              title: used in project
              description: An ontology that is used in a project.
              type: object
              properties:
                '@id':
                  example: https://example.org/Project/ProjectID
                '@type':
                  example: foaf:Project
            owl:deprecated:
              title: deprecated
              description: The annotation property that indicates that a given entity has been deprecated.
              $ref: "#/components/schemas/rdfsResource"
            owl:versionInfo:
              title: version information
              description: The version of the released ontology.   
              $ref: "#/components/schemas/xsdString"
            pav:curatedOn:
              title: curation date
              type: object
              properties:
                '@type':
                  example: xsd:date
            pav:curatedBy:
              title: curator
              description: A curator who restructure the previously authored content and shape it to be appropriate for the intended representation (e.g. by normalizing the fields for being represented in a spreadsheet).
            pav:createdWith:
              title: created with
              description: The tool used for the creation of an ontology.
            prov:wasGeneratedBy:
              title: was generated by
              description: Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.
              type: object
              properties:
                '@id':
                  example: https://example.org/Activity/ActivityID
                '@type':
                  example: prov:Activity
            rdfs:comment:
              title: notes or comments
              description: A description of the subject resource.      
              $ref: "#/components/schemas/rdfsLiteral"
            schema:associatedMedia:
              title:
              description: A media object that encodes this CreativeWork. This property is a synonym for encoding.      
            schema:award:
              title: award
              description: An award won by or for this item.
            schema:comment:
              title: user notes or reviews
              description: Comments, typically from users.
            schema:funding:
              title: funding
              description: A Grant that directly or indirectly provide funding or sponsorship for this item.
            schema:publishingPrinciples:
              title: publishingPrinciples
              description: The publishingPrinciples property indicates (typically via URL) a document describing the editorial principles of an Organization (or individual, e.g. a Person writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies.
            schema:translator:
              title: translator
              description: Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
            sd:endpoint:
              title: endpoint
              description: The SPARQL endpoint of an sd:Service that implements the SPARQL Protocol service. The object of the sd:endpoint property is an IRI.
            skos:hiddenLabel:
              title: hidden label
              description: Hidden or past name.   
              $ref: "#/components/schemas/rdfsLiteral"
            vann:changes:
              title: Changes
              description: A reference to a resource that describes changes between this version of a vocabulary and the previous.
            vann:example:
              title: example
              description: A reference to a resource that provides an example of how this resource can be used.
            vann:preferredNamespacePrefix:
              title: Preferred Namespace Prefix
              description: The preferred namespace prefix to use when using terms from this vocabulary in an XML document
            vann:preferredNamespaceUri:
              title: Preferred Namespace Uri
              description: The preferred namespace URI to use when using terms from this vocabulary in an XML document
            void:openSearchDescription:
              title: free-text search endpoint
              description: An OpenSearch description document for a free-text search service over a void:Dataset.
              type: object
              properties:
                '@id':
                  example: https://example.org/Document/DocumentID
                '@type':
                  example: foaf:Document
            void:uriLookupEndpoint:
              title: URI lookup endpoint
              description: A protocol endpoint for simple URI lookups for a void:Dataset.
              $ref: "#/components/schemas/xsdAnyURI"
            void:uriRegexPattern:
              title: identifier pattern
              description: A regular expression that matches the URIs of a void:Dataset's entities.

    modSemanticArtefactCatalogRecord:
      title: Semantic Artefact Catalog Record
      description: A record in a catalog, describing the registration of a single semantic artefact
      allOf:
        - type: object
          properties:
            '@id':
              example: https://example.org/SemanticArtefactCatalogRecord/SemanticArtefactCatalogRecordID
            '@type':
              type: array
              items:
                example: mod:SemanticArtefactCatalogRecord
        - $ref: '#/components/schemas/dcatCatalogRecord'
        - type: object
          properties:
            dcterms:dateSubmitted:
              title: submission date
              description: Date of submission of the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            foaf:homepage:
              title: homepage
              description: An unambiguous reference to the resource within a given context.
              type: object
              properties:
                '@id':
                  example: https://example.org/Document/DocumentID
                '@type':
                  example: foaf:Document
            dcterms:created:
              title: creation date
              description: Date of creation of the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            pav:curatedBy:
              title: curator
              description: A curator who restructure the previously authored content and shape it to be appropriate for the intended representation (e.g. by normalizing the fields for being represented in a spreadsheet).
            pav:curatedOn:
              title: curation date
              type: object
              properties:
                '@type':
                  example: xsd:date

    modSemanticArtefactDistribution:
      title: Semantic Artefact Distribution
      description: A specific representation and/or serialization of a semantic artefact.
      allOf:
        - type: object
          properties:
            '@id':
              example: https://example.org/SemanticArtefactDistribution/SemanticArtefactDistributionID
            '@type':
              type: array
              items:
                example: mod:SemanticArtefactDistribution
        - $ref: '#/components/schemas/dcatDistribution'
        - type: object
          properties:
            cc:useGuidelines:
              title: use guidelines
              description: A related resource which defines non-binding use guidelines for the work.
              $ref: "#/components/schemas/rdfsResource"
            dcterms:created:
              title: creation date
              description: Date of creation of the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:dateSubmitted:
              title: submission date
              description: Date of submission of the resource.
              $ref: "#/components/schemas/rdfsLiteral"
            dcterms:valid:
              title: validity date
              description: Date (often a range) of validity of a resource.
              $ref: "#/components/schemas/rdfsLiteral"
            mod:authorProperty:
              title: object author property
              description: Property used to specify objects's author.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:averageChildCount:
              title: average number of children per class
              description: Average number of children per class (BioPortal definition).
              type: object
              properties:
                '@type':
                  example: xsd:decimal
                '@value':
                  example: 4
            mod:browsingUI:
              title: browsing user interface
              description: The user interface (URL) where the ontology may be browsed or searched.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:classesWithMoreThan25Children:
              title: number of classes with more than 25 children
              description: Number of classes that have more than 25 direct subclasses.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:classesWithNoAuthorMetadata:
              title: number of classes with no author metadata
              description: Number of classes with author metadata.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:classesWithNoDateMetadata:
              title: number of classes with no date metadata
              description: Number of classes with no date metadata.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:classesWithNoDefinition:
              title: number of classes with no definition
              description: Number of classes that have no value for the definition property.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:classesWithNoFormalDefinition:
              title: number of classes with no formal or logical definition
              description: Number of classes with no formal or logical definition.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:classesWithNoLabel:
              title: number of classes with no label
              description: Number of classes with no labels.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:classesWithOneChild:
              title: number of classes with a single child
              description: Number of classes that have only one subclass in the is-a hierarchy.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:conformsToKnowledgeRepresentationParadigm:
              title: knowledge representation paradigm
              description: A representation formalism that is followed to describe knowledge in an ontology. Example includes description logics, first order logic, etc. 
              type: object
              properties:
                '@id':
                  example: https://example.org/KnowledgeRepresentationParadigm/KnowledgeRepresentationParadigmID
                '@type':
                  example: mod:KnowledgeRepresentationParadigm
            mod:createdProperty:
              title: object creation date property
              description: Property used to specify the date of creation of a class or another object in the ontology.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:definitionProperty:
              title: object definition property
              description: Property used to specify objects' definition.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:fairAssessment:
              title: FAIR assessment
              description: A FAIRness assessment result produced by a known or identified FAIRness assessment method or tool. It can be either a simple number or a structured result document explaining the assessment.
              type: object
              properties:
                '@id':
                  example: https://example.org/FairAssessment/FairAssessmentID
                '@type':
                  example: mod:FairAssessment
            mod:fairScore:
              title: FAIR assessment
              description: A FAIRness assessment result produced by a known or identified FAIRness assessment method or tool. It can be either a simple number or a structured result document explaining the assessment.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:hasFormalityLevel:
              title: formality level
              description: The level of formality of an ontology.
              $ref: "#/components/schemas/xsdString"
            mod:hasRepresentationLanguage:
              title: representation language
              description: A language that is used to create an ontology.
              $ref: "#/components/schemas/xsdString"
            mod:hasSyntax:
              title: syntax
              description: The syntax followed in the creation of an ontology.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:hierarchyProperty:
              title: transitive hierarchy property
              description: Property used to specify the hierarchy (e.g. rdfs:subClassOf or skos:broader).
              $ref: "#/components/schemas/xsdAnyURI"
            mod:maxChildCount:
              title: maximum number of children per class
              description: Maximum number of children per class (BioPortal definition).
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:maxDepth:
              title: maximum depth of the hierachy
              description: Maximum depth of the hierarchy tree.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:metadataVoc:
              title: metadata vocabulary used
              $ref: "#/components/schemas/xsdAnyURI"
            mod:metrics:
              title: metrics
              description: A generic property to store any metrics (number) related to the ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:modifiedProperty:
              title: object modification date property
              description: Property used to specify the date of modification of a class or another object in the ontology.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:numberOfAxioms:
              title: number of axioms or triples
              description: The total number of axioms in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfClasses:
              title: number of classes
              description: The total number of classes in an ontology.
              type: integer
            mod:numberOfDataProperties:
              title: number of data properties
              description: The total number of data properties in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfDeprecated:
              title: number of deprecated objects
              description: The total number of  in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfIndividuals:
              title: number of individuals
              description: The total number of individuals in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfLabels:
              title: number of labels
              description: Number of defined labels for any resources in an ontology (classes, properties, etc).
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfMappings:
              title: number of mappings
              description: Number of mappings within a given semantic artefact or semantic artefact catalogue.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfObjectProperties:
              title: number of object properties
              description: The total number of object properties in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:numberOfProperties:
              title: number of properties
              description: The total number of properties in an ontology.
              $ref: "#/components/schemas/xsdNonNegativeInteger"
            mod:obsoleteParent:
              title: root of obsolete branch
              description: Property used to specify the root of an obsolete branch in the ontology.  
              $ref: "#/components/schemas/xsdAnyURI"
            mod:obsoleteProperty:
              title: object obsolete property
              description: Property used to specify obsolete objects.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:prefLabelProperty:
              title: object preferred label property
              description: Property used to specify objects' preferred label.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:sampleQueries:
              title: sample queries
              description: A set of queries (may be SPARQL, DL Queries) that are provided along with an ontology.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:synonymProperty:
              title: object synonym property
              description: Property used to specify objects' synonyms.
              $ref: "#/components/schemas/xsdAnyURI"
            mod:usedEngineeringMethodology:
              title: engineering methodology
              description: A methodolgy following which an ontology is created.
              type: object
              properties:
                '@id':
                  example: https://example.org/EngineeringMethodology/EngineeringMethodologyID
                '@type':
                  example: mod:EngineeringMethodology
            owl:deprecated:
              title: deprecated
              description: The annotation property that indicates that a given entity has been deprecated.
              $ref: "#/components/schemas/rdfsResource"
            owl:imports:
              title: imports
              description: References another OWL ontology containing definitions, whose meaning is considered to be part of the meaning of the importing ontology.
              type: object
              properties:
                '@id':
                  example: https://example.org/Ontology/OntologyID
                '@type':
                  example: owl:Ontology
            pav:curatedOn:
              title: curation date
              type: object
              properties:
                '@type':
                  example: xsd:date
            sd:endpoint:
              title: endpoint
              description: The SPARQL endpoint of an sd:Service that implements the SPARQL Protocol service. The object of the sd:endpoint property is an IRI.

    modSemanticArtefactService:
      title: Semantic Artefact Service
      description: A collection of operations that provides access to one or more semantic artefacts processing functions.
      allOf:
        - type: object
          properties:
            '@id':
              example: https://example.org/SemanticArtefactService/SemanticArtefactServiceID
            '@type':
              type: array
              items:
                example: mod:SemanticArtefactService
        - $ref: '#/components/schemas/dcatDataService'

    owlClass:
      title: Class
      description: An OWL class.
      type: object
      properties:
       '@id':
          example: https://example.org/Class/ClassID
       '@type':
          example: owl:Class

    owlNamedIndividual:
      title: NamedIndividual
      description: The class of named individuals.
      type: object
      properties:
        '@id':
          example: https://example.org/NamedIndividual/NamedIndividualID
        '@type':
          example: owl:NamedIndividual

    Pagination:
      type: object
      description: URLs to navigate through the results
      properties:
        firstPage:
          title: first page
          description: The URL of the first page of the results
          example: 'https://example.org/ont1?page=1&pagesize=50'
        previousPage:
          title: previous page
          description: The URL of the previous page of the results
          example: 'https://example.org/ont1?page=3&pagesize=50'
        nextPage:
          title: next page
          description: The URL of the next page of the results
          example: 'https://example.org/ont1?page=5&pagesize=50'

    rdfsLiteral:
      title: Literal
      description: The class of literal values, eg. textual strings and integers.
      type: object
      properties:
        '@type':
          example: rdfs:Literal
        '@value':
          example: Lorem ipsum

    rdfsProperty:
      title: Property
      description: rdf:Property is the class of RDF properties. rdf:Property is an instance of rdfs:Class.
      type: object
      properties:
        '@type':
          example: rdfs:Property

    rdfsResource:
      title: Resource
      description: The class resource, everything.
      type: object
      properties:
        '@id':
          example: https://example.org/Resource/ResourceID
        '@type':
          example: rdfs:Resource

    skosCollection:
      title: Collection
      type: object
      properties:
        '@type':
          example: skos:Collection
        skos:prefLabel:
          example: collection of cars

    skosConcept:
      title: Concept
      type: object
      properties:
        '@type':
          example: skos:Concept
        skos:prefLabel:
          example: cars

    skosScheme:
      title: ConceptScheme
      type: object
      properties:
        '@type':
          example: skos:ConceptScheme
        skos:prefLabel:
          example: cars scheme

    xsdNonNegativeInteger:
      type: object
      properties:
        '@type':
          example: xsd:nonNegativeInteger
        '@value':
          example: 5436

    xsdString:
      type: object
      properties:
        '@type':
          example: xsd:string
        '@value':
          example: Lorem ipsum

    xsdAnyURI:
      type: object
      properties:
        '@type':
          example: xsd:anyURI
        '@value':
          example: https://example.org

    # comesFromTheSameDomain
    # subPropertyOf semanticArtefactRelation

    # generalizes
    # subPropertyOf semanticArtefactRelation

    # hasDisjunctionsWith
    # subPropertyOf semanticArtefactRelation

    # hasDisparateModelling
    # subPropertyOf semanticArtefactRelation

    # reliesOn
    # subPropertyOf semanticArtefactRelation

    # similar
    # subPropertyOf semanticArtefactRelation

    # specializes
    # subPropertyOf semanticArtefactRelation

    # usedBy
    # subPropertyOf semanticArtefactRelation

paths:
  # Infomation about the semantic artefact catalogue
  /:
    parameters:
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Catalogue
      summary: Get information about the semantic artefact catalogue
      operationId: catalogue
      responses:
        "200":
          $ref: "#/components/responses/catalog"

  # Information about all semantic artefact catalog records
  /records:
    parameters:
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Record
      summary: Get information about all semantic artefact catalog records.
      description: Retrieves a collection of semantic artefact catalog records.
      operationId: getCatalogueRecords
      responses:
        "200":
          $ref: "#/components/responses/records"
        "404":
          $ref: "#/components/responses/error_message"

  # Information about a semantic artefact catalog record
  /records/{artefactID}:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Record
      summary: Get information about a semantic artefact catalog record.
      description: Retrieves information about a semantic artefact catalog record.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/record"
        "404":
          $ref: "#/components/responses/error_message"

  # API Documentation
  /doc/api:
    get:
      tags:
        - Documentation
      summary: Get the API documentation
      operationId: docs
      responses:
        "200":
          $ref: "#/components/responses/notes"

   # Information about all semantic artefacts
  /artefacts:
    parameters:
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Artefact
      summary: Get information about all semantic artefacts.
      description: Retrieves a collection of all semantic artefacts.
      operationId: getArtefacts
      responses:
        "200":
          $ref: "#/components/responses/artefacts"
        "404":
          $ref: "#/components/responses/error_message"
          
 # Information about a semantic artefact
  /artefacts/{artefactID}:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Artefact
      summary: Get information about a semantic artefact.
      description: Retrieves information about a semantic artefact.
      operationId: getArtefact
      responses:
        "200":
          $ref: "#/components/responses/artefact"
        "404":
          $ref: "#/components/responses/error_message"

  # Information about a semantic artefact's distributions
  /artefacts/{artefactID}/distributions:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Artefact
      summary: Get information about a semantic artefact's distributions.
      description: Retrieves a collection of a semantic artefact distributions.
      operationId: getArtefactDistributions
      responses:
        "200":
          $ref: "#/components/responses/distributions"
        "404":
          $ref: "#/components/responses/error_message"

  # Information about a specific semantic artefact's distribution
  /artefacts/{artefactID}/distributions/{distributionID}:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/distributionID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Artefact
      summary: Get information about a semantic artefact's distribution.
      description: Retrievesinformation about a semantic artefact distribution.
      operationId: getArtefactDistribution
      responses:
        "200":
          $ref: "#/components/responses/distribution"
        "404":
          $ref: "#/components/responses/error_message"


  # Information about a semantic artefact's latest distribution
  /artefacts/{artefactID}/distributions/latest:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Artefact
      summary: Get information about a semantic artefact's latest distribution.
      description: Get the 'latest' distribution for a given semantic artefact; latest being understood as the one that is currently served by the '/resources' calls
      operationId: getArtefactDistributionsLatest
      responses:
        "200":
          $ref: "#/components/responses/distribution"
        "404":
          $ref: "#/components/responses/error_message"

  # Information about a semantic artefact catalog record
  /artefacts/{artefactID}/record:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Artefact
      summary: Get information about a semantic artefact catalog record.
      description: Retrieves information about a semantic artefact catalog record.
      operationId: getArtefactRecord
      responses:
        "200":
          $ref: "#/components/responses/record"
        "404":
          $ref: "#/components/responses/error_message"

  # Get a list of all the resources within an artefact
  /artefacts/{artefactID}/resources:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"

    get:
      tags:
        - Artefact
      summary: Get a list of all the resources within an artefact.
      description: Retrieves a list of all the resources within an artefact.
      operationId: getArtefactResources
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"

  # Get a resource within an artefact
  /artefacts/{artefactID}/resources/{resourceID}:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/resourceID"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get a specific resources from within an artefact.
      description: Retrieves a specific resources from within an artefact.
      operationId: getArtefactResource
      responses:
        "200":
          $ref: "#/components/responses/resource"
        "404":
          $ref: "#/components/responses/error_message"

  # Get a list of all owl:Classes within an artefact
  /artefacts/{artefactID}/resources/classes:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"

    get:
      tags:
        - Artefact
      summary: Get a list of all owl:Classes within an artefact.
      description: Retrieves a list of all the owl:Classes within an artefact.
      operationId: getArtefactClasses
      responses:
        "200":
          $ref: "#/components/responses/classes"
        "404":
          $ref: "#/components/responses/error_message"

  # Get a list of all skos:Concept within an artefact
  /artefacts/{artefactID}/resources/concepts:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"

    get:
      tags:
        - Artefact
      summary: Get a list of all skos:Concept within an artefact.
      description: Retrieves a list of all skos:Concept within an artefact.
      operationId: getArtefactConcepts
      responses:
        "200":
          $ref: "#/components/responses/concepts"
        "404":
          $ref: "#/components/responses/error_message"

  # Get a list of all the rdf:Property within an artefact
  /artefacts/{artefactID}/resources/properties:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"

    get:
      tags:
        - Artefact
      summary: Get a list of all the rdf:Property within an artefact.
      description: Retrieves a list of all the rdf:Property within an artefact.
      operationId: getArtefactProperties
      responses:
        "200":
          $ref: "#/components/responses/properties"
        "404":
          $ref: "#/components/responses/error_message"

  # Get a list of all the instances (owl named individual) within an artefact
  /artefacts/{artefactID}/resources/individuals:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"

    get:
      tags:
        - Artefact
      summary: Get a list of all the instances (owl named individual) within an artefact.
      description: Retrieves a list of all the instances (owl named individual) within an artefact.
      operationId: getArtefactIndividuals
      responses:
        "200":
          $ref: "#/components/responses/individuals"
        "404":
          $ref: "#/components/responses/error_message"

  # Get a list of all the skos:ConceptScheme within an artefact
  /artefacts/{artefactID}/resources/schemes:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"

    get:
      tags:
        - Artefact
      summary: Get a list of all the skos:ConceptScheme within an artefact.
      description: Retrieves a list of all the skos:ConceptScheme within an artefact.
      operationId: getArtefactSchemes
      responses:
        "200":
          $ref: "#/components/responses/schemes"
        "404":
          $ref: "#/components/responses/error_message"

  # Get a list of all the skos:Collection within an artefact
  /artefacts/{artefactID}/resources/collections:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"

    get:
      tags:
        - Artefact
      summary: Get a list of all the skos:Collection within an artefact.
      description: Retrieves a list of all the skos:Collection within an artefact.
      operationId: getArtefactCollections
      responses:
        "200":
          $ref: "#/components/responses/collections"
        "404":
          $ref: "#/components/responses/error_message"

  # Get a list of all the skos-xl:Label within an artefact
  /artefacts/{artefactID}/resources/labels:
    parameters:
      - $ref: "#/components/parameters/artefactID"
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"

    get:
      tags:
        - Artefact
      summary: Get a list of all the skos-xl:Label within an artefact.
      description: Retrieves a list of all the skos-xl:Label within an artefact.
      operationId: getArtefactLabels
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"

  # Search the metadata and content in the catalogue
  /search:
    parameters:
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/query"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Search
      summary: Search all of the metadata and content in a catalogue.
      description: The returned data should include a decription of the type of data that is being returned.
      operationId: search
      responses:
        "200":
          $ref: "#/components/responses/searchResult"
        "404":
          $ref: "#/components/responses/error_message"

  # Search all of the content in a catalogue
  /search/content:
    parameters:
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/query"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"

    get:
      tags:
        - Search
      summary: Search all of the content in a catalogue.
      description: The returned data should include a decription of the type of data that is being returned. For example the resturned content could be SKOS Concepts or OWL Classes.
      operationId: searchContent
      responses:
        "200":
          $ref: "#/components/responses/searchResultContent"
        "404":
          $ref: "#/components/responses/error_message"

  # Search all of the metadata in a catalogue
  /search/metadata:
    parameters:
      - $ref: "#/components/parameters/format_param"
      - $ref: "#/components/parameters/query"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/pagesize"
      - $ref: "#/components/parameters/display"

    get:
      tags:
        - Search
      summary: Search all of the metadata in a catalogue.
      description: The returned data should include a decription of the type of data that is being returned.
      operationId: searchMetadata
      responses:
        "200":
          $ref: "#/components/responses/searchResultMetadata"
        "404":
          $ref: "#/components/responses/error_message"

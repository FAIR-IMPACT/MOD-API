openapi: 3.1.0
servers:
  - url: https://localhost

info:
  description: This service provides about semantic artefacts.
  title: MOD API
  version: 0.0.1

tags:
  - name: Artefact
    description: Get information about a semantic artefact.
  - name: Catalogue
    description: Get information about the semantic artefact catalogue.
  - name: Search
    description: Search for semantic artefacts.
  - name: Documentation
    description: Get documentation about the service.

components:

  parameters:
    format_param:
      description: | 
        The response format.
        
        This will override any value of `Accept` in the request headers.
        Possible values are `html`, `json`, `ttl` and `xml`. The default value is `html`.
      name: format
      in: query
      schema:
        type: string
        enum: 
          - html
          - json
          - ttl
          - xml
        default: html

    artefact:
      description: The UID of the artefact.
      name: artefact
      in: path
      required: true
      schema:
        type: string

  responses:

    notes:
      description: "OK"
      content:
        text/html:
          schema:
            $ref: "#/components/schemas/html"

    artefact:
      description: "OK"
      content:
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/json:
          schema:
            $ref: "#/components/schemas/SemanticArtefact"
        application/rdf+xml:
          schema:
            type: string

    catalog:
      description: "OK"
      content:
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/json:
          schema:
            $ref: "#/components/schemas/SemanticArtfeactCatalog"
        application/rdf+xml:
          schema:
            type: string

    distribution:
      description: "OK"
      content:
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/json:
          schema:
            $ref: "#/components/schemas/SemanticArtefactDistribution"
        application/rdf+xml:
          schema:
            type: string

    record:
      description: "OK"
      content:
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/json:
          schema:
           $ref: "#/components/schemas/SemanticArtefactCatalogRecord"
        application/rdf+xml:
          schema:
            type: string

    resources:
      description: "OK"
      content:
        text/html:
          schema:
            $ref: "#/components/schemas/html"
        text/turtle:
          schema:
            type: string
        application/json:
          schema:
            type: string
        application/rdf+xml:
          schema:
            type: string

    error_message:
      description: The provided parameters are incorrect.
      content:
        text/html:
          schema:
            $ref: "#/components/schemas/error_message"

  schemas:
    error_message:
      title: error message
      description: A text message describing an error.
      type: string
      maxLength: 256

    html:
      description: A html page.
      type: string

    Analytics:
      title: Analytics
      description: Number of visits an ontology received.

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Catalog
    Catalog:
      title: Catalog
      description: A curated collection of metadata about resources (e.g., datasets and data services in the context of a data catalog)
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          properties:
            catalog:
              title: catalog
              description: A catalog whose contents are of interest in the context of this catalog.
              $ref: "#/components/schemas/Catalog"
            dataset:
              title: dataset
              description: A collection of data that is listed in the catalog.
              $ref: "#/components/schemas/Dataset"
            hasPart:
              title: has part
              description: An item that is listed in the catalog.
              $ref: "#/components/schemas/Resource"
            homepage:
              title: homepage
              description: A homepage of the catalog (a public Web document usually available in HTML).
              $ref: "#/components/schemas/FoafDocument"
            record:
              title: catalog record
              description: A record describing the registration of a single dataset or data service that is part of the catalog.
              type: array
              items:
                $ref: "#/components/schemas/CatalogRecord"
            resource:
              title: resource
              description: A resource that is listed in the catalog.
              $ref: "#/components/schemas/Resource"
            service:
              title: service
              description: A site or end-point that is listed in the catalog.
              $ref: "#/components/schemas/DataService"
            themeTaxonomy:
              title: themes
              description: A knowledge organization system (KOS) used to classify catalog's datasets and services.
              $ref: "#/components/schemas/RdfsResource"

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Catalog_Record
    CatalogRecord:
      title: Catalog Record
      description: A record in a data catalog, describing the registration of a single dataset or data service.
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            conformsTo:
              title: conforms to
              description: An established standard to which the described resource conforms.
              $ref: "#/components/schemas/DctStandard" 
            description:
              title: Description
              description: A free-text account of the record.
              type: string
            issued:
              title: listing date
              description: The date of listing (i.e. formal recording) of the corresponding dataset or service in the catalog.
              type: string
            modified:
              title: update/modification date
              description: Most recent date on which the catalog entry was changed, updated or modified.
              type: string
            title:
              title: Title
              description: A name given to the resource.
              type: string
            primaryTopic:
              title: primary topic
              description: The Resource (dataset or service) described in the record.
              $ref: "#/components/schemas/Resource"

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Data_Service
    DataService:
      title: Data service
      description: A collection of operations that provides access to one or more datasets or data processing functions.
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            endpointDescription:
              title: endpoint description
              description: A description of the services available via the end-points, including their operations, parameters etc.
              $ref: "#/components/schemas/RdfsResource"
            endpointURL:
              title: endpoint URL
              description: The root location or primary endpoint of the service (a web-resolvable IRI).
              $ref: "#/components/schemas/RdfsResource"
            servesDataset:
              tile: serves dataset
              description: A collection of data that this data service can distribute.
              $ref: "#/components/schemas/Dataset"

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Dataset
    Dataset:
      title: Dataset
      description: A collection of data, published or curated by a single agent, and available for access or download in one or more representations.
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            accrualPeriodicity:
              title: frequency
              description: The frequency at which dataset is published.
              $ref: "http://purl.org/dc/terms/Frequency"
            distribution:
              title: dataset distribution
              description: An available distribution of the dataset.
              $ref: "#/components/schemas/Distribution"
            spatial:
              title: spatial/geographical coverage
              description: The geographical area covered by the dataset.
              $ref: "http://purl.org/dc/terms/Location"
            spatialResolutionInMeters:
              title: spatial resolution
              description: Minimum spatial separation resolvable in a dataset, measured in meters.
              type: number
            temporal:
              title: temporal coverage
              description: The temporal period that the dataset covers.
              $ref: "http://purl.org/dc/terms/PeriodOfTime"
            temporalResolution:
              title: temporal resolution
              description: Minimum time period resolvable in the dataset.
              $ref: "https://www.w3.org/TR/xmlschema11-2/#duration"
            wasGeneratedBy:
              title: was generated by
              description: An activity that generated, or provides the business context for, the creation of the dataset.
              $ref: "https://www.w3.org/TR/prov-o/#Activity"

    DctermsAgent:
      title: Agent
      description: A resource that acts or has the power to act.

    DctIsReferencedBy:
      title: Is Referenced By
      description: A related resource that references, cites, or otherwise points to the described resource.

    DctLicenseDocument:
      title: License Document
      description: A legal document giving official permission to do something with a resource.

    DctLinguisticSystem:
      title: Linguistic System
      description: A system of signs, symbols, sounds, gestures, or rules used in communication.

    DctMediaType:
      title: Media Type
      description: A file format or physical medium.

    DctMediaTypeOrExtent:
      title: Media Type or Extent
      description: A media type or extent.

    DctRelation:
      title: Relation
      description: A related resource.

    DctRightsStatement:
      title: Rights Statement
      description: A statement about the intellectual property rights (IPR) held in or over a resource, a legal document giving official permission to do something with a resource, or a statement about access rights.

    DctStandard:
      title: Standard
      description: A reference point against which other things can be evaluated or compared.

    DcType:
      title: Type
      description: The nature or genre of the resource.

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Distribution
    Distribution:
      title: Distribution
      description: A specific representation of a dataset. A dataset might be available in multiple serializations that may differ in various ways, including natural language, media-type or format, schematic organization, temporal and spatial resolution, level of detail or profiles (which might specify any or all of the above).
      type: object
      properties:
        accessService:
          title: access service
          description: A data service that gives access to the distribution of the dataset
          $ref: "#/components/schemas/DataService"
        accessRights:
          title: access rights
          description: A rights statement that concerns how the distribution is accessed.
          $ref: "#/components/schemas/DctRightsStatement"
        accessURL:
          title: access URL
          description: A URL of the resource that gives access to a distribution of the dataset. E.g. landing page, feed, SPARQL endpoint.
          $ref: "#/components/schemas/RdfsResource"
        byteSize:
          title: byte size
          description: The size of a distribution in bytes.
          type: number
        compressFormat:
          title: compression format
          description: The compression format of the distribution in which the data is contained in a compressed form, e.g. to reduce the size of the downloadable file.
          $ref: "#/components/schemas/DctMediaType"
        conformsTo:
          title: conforms to
          description: An established standard to which the distribution conforms.
          $ref: "#/components/schemas/DctStandard"
        description:
          title: description
          description: A free-text account of the distribution.
          type: string
        downloadURL:
          title: download URL
          description: The URL of the downloadable file in a given format. E.g. CSV file or RDF file. The format is indicated by the distribution's dct:format and/or dcat:mediaType
          $ref: "#/components/schemas/RdfsResource"
        format:
          title: format
          description: The file format of the distribution.
          $ref: "#/components/schemas/DctMediaTypeOrExtent"
        hasPolicy:
          title: has policy
          description: An ODRL conformant policy expressing the rights associated with the distribution.
          $ref: "#/components/schemas/OdrlPolicy"
        issued:
          title: release date
          description: Date of formal issuance (e.g., publication) of the distribution.
          type: string
        license:
          title: license
          description: A legal document under which the distribution is made available.
          $ref: "#/components/schemas/DctLicenseDocument"
        mediaType:
          title: media type
          description: The media type of the distribution as defined by IANA.
          $ref: "#/components/schemas/DctMediaType"
        modified:
          title: update/modification date
          description: Most recent date on which the distribution was changed, updated or modified.
          type: string
        packageFormat:
          title: packaging format
          description: The package format of the distribution in which one or more data files are grouped together, e.g. to enable a set of related files to be downloaded together.
          $ref: "#/components/schemas/DctMediaType"
        rights:
          title: rights
          description: Information about rights held in and over the distribution.
          $ref: "#/components/schemas/DctRightsStatement"
        spatialResolutionInMeters:
          title: spatial resolution
          description: The minimum spatial separation resolvable in a dataset distribution, measured in meters.
          type: number
        temporalResolution:
          title: temporal resolution
          description: Minimum time period resolvable in the dataset distribution.
        title:
          title: title
          description: A name given to the distribution.
          type: string

    EngineeringMethodology:
      title: Engineering Methodology
      description: Information about the engineering methodology.

    Evaluation:
      title: Evaluation
      description: The results of evaluating an ontology. An ontology can have more than one evaluations.

    FoafAgent:
      title: Agent
      description: An agent (eg. person, group, software or physical artifact).
      
    FoafDocument:
      title: Document
      description: A document.

    FoafProject:
      title: Project
      description: The Project class represents the class of things that are 'projects'. These may be formal or informal, collective or individual. It is often useful to indicate the homepage of a Project.

    Group:
      title: Group
      description: A group of ontologies that the ontology is usually considered into.

    KnowledgeRepresentationParadigm:
      title: Knowledge Representation Paradigm

    OdrlPolicy:
      title: Policy
      description: A non-empty group of Permissions and/or Prohibitions.

    ProvAttribution:
      title: Attribution
      description: Attribution is the ascribing of an entity to an agent. When an entity e is attributed to agent ag, entity e was generated by some unspecified activity that in turn was associated to agent ag. Thus, this relation is useful when the activity is not known, or irrelevant.

    RdfsResource:
      title: Resource
      description: The class resource, everything.

    # see https://www.w3.org/TR/vocab-dcat-2/#Class:Resource
    Resource:
      title: Catalogued resource
      description: Resource published or curated by a single agent.
      type: object
      properties:
        accessRights:
          title: access rights
          description: Information about who can access the resource or an indication of its security status.
          $ref: "#/components/schemas/DctRightsStatement"
        conformsTo:
          title: conforms to
          description: An established standard to which the described resource conforms.
          $ref: "#/components/schemas/DctStandard"
        contactPoint:
          title: contact point
          description: Relevant contact information for the cataloged resource. Use of vCard is recommended [VCARD-RDF].
          $ref: "#/components/schemas/VcardKind"
        creator:
          title: resource creator
          description: The entity responsible for producing the resource.
          $ref: "#/components/schemas/FoafAgent"
        description:
          title: description
          description: A free-text account of the item.
          type: string
        hasPolicy:
          title: has policy
          description: An ODRL conformant policy expressing the rights associated with the resource.
          $ref: "#/components/schemas/OdrlPolicy"
        identifier:
          title: identifier
          description: A unique identifier of the item.
          type: string
        isReferencedBy:
          title: is referenced by
          description: A related resource, such as a publication, that references, cites, or otherwise points to the cataloged resource.
          $ref: "#/components/schemas/DctIsReferencedBy"
        issued:
          title: release date
          description: Date of formal issuance (e.g., publication) of the item.
          type: string
        keyword:
          title:  keyword/tag
          description: A keyword or tag describing the resource.
          type: string
        landingPage:
          title: landing page
          description: A Web page that can be navigated to in a Web browser to gain access to the catalog, a dataset, its distributions and/or additional information.
          $ref: "#/components/schemas/FoafDocument"
        language:
          title: language
          description: A language of the item. This refers to the natural language used for textual metadata (i.e. titles, descriptions, etc) of a cataloged resource (i.e. dataset or service) or the textual values of a dataset distribution
          $ref: "#/components/schemas/DctLinguisticSystem"
        license:
          title: license
          description: A legal document under which the resource is made available.
          $ref: "#/components/schemas/DctLicenseDocument"
        modified:
          title: update/modification date
          description: Most recent date on which the item was changed, updated or modified.
          type: string
        publisher:
          title: publisher
          description: The entity responsible for making the item available.
          $ref: "#/components/schemas/FoafAgent"
        qualifiedAttribution:
          title: qualified attribution
          description: Link to an Agent having some form of responsibility for the resource
          $ref: "#/components/schemas/ProvAttribution"
        qualifiedRelation:
          title: qualified relation
          description: Link to a description of a relationship with another resource.
          $ref: "#/components/schemas/Resource"
        relation:
          title: resource relation
          description: A resource with an unspecified relationship to the cataloged item.
          $ref: "#/components/schemas/DctRelation"
        rights:
          title: rights
          description: A statement that concerns all rights not addressed with dct:license or dct:accessRights, such as copyright statements.
          $ref: "#/components/schemas/DctRightsStatement"
        theme:
          title: theme/category
          description: A main category of the resource. A resource can have multiple themes.
          $ref: "#/components/schemas/SkosConcept"
        title:
          title: title
          description: A name given to the item.
          type: string
        type:
          title: type/genre
          description: The nature or genre of the resource.
          $ref: "#/components/schemas/DcType"

    SemanticArtefact:
      title: Semantic Artefact
      description: Semantic Artefact is defined here as a machine-actionable and -readable formalisation of a conceptualisation enabling sharing and reuse by humans and machines. These artefacts may have a broad range of formalisation, from loose set of terms, taxonomies, thesauri to higher-order logics, and include the concepts/terms/classes constituting these. Moreover, semantic artefacts are serialised using a variety of digital representation formats, e.g., RDF Turtle, OWL-RDF, XML, JSON-LD.
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            acronym:
              title: acronym
              description: Short acronym label, often used as an identifier within some ontology platforms such as BioPortal or OBO Foundry.
              type: string
            analytics:
              title: :analytics
              description: This property shall be used to store any analytics for an ontology. E.g., number of visits an ontology received in a portal, number of downloads, etc.
              $ref: "#/components/schemas/Analytics"
            browsingUI:
              title: browsing user interface
              description: The user interface (URL) where the ontology may be browsed or searched.
              type: string
              format: uri
            competencyQuestion:
              title: competency question
              description: A set of questions made to build an ontology at the design time.
              type: string
            conformsToKnowledgeRepresentationParadigm:
              title: knowledge representation paradigm
              description: A representation formalism that is followed to describe knowledge in an ontology. Example includes description logics, first order logic, etc. 
              $ref: "#/components/schemas/KnowledgeRepresentationParadigm"
            designedForTask:
              title: designed for task
              description: The purpose for which the ontology was originally designed.
              $ref: "#/components/schemas/SemanticArtefactTask"
            endorsedBy:
              title: endorsed by
              description: An ontology endorsed by an agent.
              $ref: "#/components/schemas/DctermsAgent"
            group:
              title: group
              description: A group of ontologies that the ontology is usually considered into.
              $ref: "#/components/schemas/Group"
            hasEvaluation:
              title: evaluation
              description: This property makes a relationship between an ontology and its evaluation result.
              $ref: "#/components/schemas/Evaluation"
            hasFormalityLevel:
              title: formality level
              description: The level of formality of an ontology.
              type: string
            knownUsage:
              title: known usage
              description: The applications where the ontology is being used.
              type: string
            semanticArtefactRelation:
              title: generally related to
              description: A general property for semantic artefact relations.
              $ref: "#/components/schemas/SemanticArtefact"
            status:
              title: status
              type: string
            URI:
              title: URI
              description: The URI of the ontology which is described by this metadata.
              type: string
              format: uri
            usedEngineeringMethodology:
              title: engineering methodology
              description: A methodolgy follwoing which an ontology is created.
              $ref: "#/components/schemas/EngineeringMethodology"
            usedInProject:
              title: used in project
              description: used in project
              $ref: "#/components/schemas/FoafProject"

    SemanticArtfeactCatalog:
      title: Semantic Artfeact Catalog
      allOf:
        - $ref: '#/components/schemas/Catalog'

    SemanticArtefactCatalogRecord:
      title: Semantic Artefact Catalog Record
      allOf:
        - $ref: '#/components/schemas/CatalogRecord'

    SemanticArtefactDistribution:
      title: Semantic Artefact Distribution
      description: A specific representation of a semantic artefact
      allOf:
        - $ref: '#/components/schemas/Distribution'
        - type: object
          properties:
            authorProperty:
              title: object author property
              description: Property used to specify objects's author.
              type: string
              format: uri
            definitionProperty:
              title: object definition property
              description: Property used to specify objects' definition.
              type: string
              format: uri
            hasRepresentationLanguage:
              title: representation language
              description: A language that is used to create an ontology.
              type: string
              format: uri
            hasSyntax:
              title: syntax
              description: The syntax followed in the creation of an ontology.
              type: string
              format: uri
            hierarchyProperty:
              title: transitive hierarchy property
              description: Property used to specify the hierarchy (e.g. rdfs:subClassOf or skos:broader).
              type: string
              format: uri
            metrics:
              title: metrics
              description: A generic property to store any metrics related to the ontology.
              type: object
            obsoleteParent:
              title: transitive hierarchy property
              description: Property used to specify the root of an obsolete branch in the ontology.  
              type: string
              format: uri
            obsoleteProperty:
              title: object obsolete property
              description: Property used to specify obsolete objects.
              type: string
              format: uri
            prefLabelProperty:
              title: object preferred label property
              description: Property used to specify objects' preferred label.
              type: string
              format: uri
            sampleQueries:
              title: sample queries
              description: A set of queries (may be SPARQL, DL Queries) that are provided along with an ontology.
              type: string
              format: uri
            synonymProperty:
              title: object synonym property
              description: Property used to specify objects' synonyms.
              type: string
              format: uri

    SemanticArtefactService:
      title: Semantic Artefact Service
      allOf:
        - $ref: '#/components/schemas/DataService'

    SemanticArtefactTask:
      title: Semantic Artefact Task

    SkosConcept:
      title: Concept

    Taxonomy:
      title: Taxonomy
      allOf:
        - $ref: '#/components/schemas/SemanticArtefact'

    Terminology:
      title: Terminology
      allOf:
        - $ref: '#/components/schemas/SemanticArtefact'

    Thesaurus:
      title: Thesaurus
      allOf:
        - $ref: '#/components/schemas/SemanticArtefact'

    VcardKind:
      title: kind
      description: The parent class for all vcard objects

    # comesFromTheSameDomain
    # subPropertyOf semanticArtefactRelation

    # generalizes
    # subPropertyOf semanticArtefactRelation

    # hasDisjunctionsWith
    # subPropertyOf semanticArtefactRelation

    # hasDisparateModelling
    # subPropertyOf semanticArtefactRelation

    # reliesOn
    # subPropertyOf semanticArtefactRelation

    # similar
    # subPropertyOf semanticArtefactRelation

    # specializes
    # subPropertyOf semanticArtefactRelation

    # usedBy
    # subPropertyOf semanticArtefactRelation

paths:
  # Infomation about the semantic artefact catalogue
  /catalogue:
    parameters:
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Catalogue
      summary: Get information about the semantic artefact catalogue
      operationId: catalogue
      responses:
        "200":
          $ref: "#/components/responses/catalog"

  # API Documentation
  /doc/api:
    get:
      tags:
        - Documentation
      summary: Get the API documentation
      operationId: docs
      responses:
        "200":
          $ref: "#/components/responses/notes"

  # Information about a semantic artefact
  /artefact/{artefact}:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get information about a semantic artefact.
      description: Retrieves information about a semantic artefact.
      operationId: artefact
      responses:
        "200":
          $ref: "#/components/responses/artefact"
        "404":
          $ref: "#/components/responses/error_message"

  # Information about a semantic artefact distribution
  /artefact/{artefact}/distribution:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get information about a semantic artefact distribution.
      description: Retrieves information about a semantic artefact distribution.
      operationId: getDistribution
      responses:
        "200":
          $ref: "#/components/responses/distribution"
        "404":
          $ref: "#/components/responses/error_message"

  # Information about a semantic artefact catalog record
  /artefact/{artefact}/record:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get information about a semantic artefact catalog record.
      description: Retrieves information about a semantic artefact catalog record.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/record"
        "404":
          $ref: "#/components/responses/error_message"

  # Get an iterator over all the resources within an artefact
  /artefact/{artefact}/resources:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get an iterator over all the resources within an artefact.
      description: Retrieves an iterator over all the resources within an artefact.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"

  # Get an iterator over all owl:Classes within an artefact
  /artefact/{artefact}/classes:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get an iterator over all owl:Classes within an artefact.
      description: Retrieves an iterator over all owl:Classes within an artefact.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"

  # Get an iterator over all skos:Concept within an artefact
  /artefact/{artefact}/concepts:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get an iterator over all skos:Concept within an artefact.
      description: Retrieves an iterator over all skos:Concept within an artefact.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"

  # Get an iterator over all the rdf:Property within an artefact
  /artefact/{artefact}/properties:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get an iterator over all the rdf:Property within an artefact.
      description: Retrieves an iterator over all the rdf:Property within an artefact.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"

  # Get an iterator over all the instances (owl individuals) within an artefact
  /artefact/{artefact}/individuals:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get an iterator over all the instances (owl individuals) within an artefact.
      description: Retrieves an iterator over all the instances (owl individuals) within an artefact.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"

  # Get an iterator over all the skos:Scheme within an artefact
  /artefact/{artefact}/schemes:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get an iterator over all the skos:Scheme within an artefact.
      description: Retrieves an iterator over all the skos:Scheme within an artefact.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"

  # Get an iterator over all the skos:Collection within an artefact
  /artefact/{artefact}/collection:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get an iterator over all the skos:Collection within an artefact.
      description: Retrieves an iterator over all the skos:Collection within an artefact.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"

  # Get an iterator over all the skos-xl:Label within an artefact
  /artefact/{artefact}/labels:
    parameters:
      - $ref: "#/components/parameters/artefact"
      - $ref: "#/components/parameters/format_param"

    get:
      tags:
        - Artefact
      summary: Get an iterator over all the skos-xl:Label within an artefact.
      description: Retrieves an iterator over all the skos-xl:Label within an artefact.
      operationId: getRecord
      responses:
        "200":
          $ref: "#/components/responses/resources"
        "404":
          $ref: "#/components/responses/error_message"
